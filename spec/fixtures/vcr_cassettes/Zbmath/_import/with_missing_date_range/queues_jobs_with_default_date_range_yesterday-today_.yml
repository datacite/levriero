---
http_interactions:
- request:
    method: get
    uri: https://oai.portal.mardi4nfdi.de/oai/OAIHandler?from=2025-01-01&metadataPrefix=datacite_articles&until=2025-01-02&verb=ListRecords
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.12.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Date:
      - Thu, 20 Mar 2025 12:40:11 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 20 Mar 2025 12:40:12 GMT
recorded_with: VCR 6.3.1
